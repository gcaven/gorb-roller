{"version":3,"sources":["App.js","index.js"],"names":["Configuration","BAB","DEX","bonus","setBAB","setDEX","setBonus","useState","collapsed","setPartialBAB","first","second","third","parseInt","ConfigurationContainer","Option","NumberInput","type","value","onChange","e","target","Selector","enabled","label","setEnabled","disabled","checked","Heading","styled","h3","OptionsContainer","div","input","SummaryBlock","App","generalBonus","setGeneralBonus","kiAttack","setKiAttack","fullAttack","setFullAttack","haste","setHaste","sneakAttack","setSneakAttack","inariBuff","setInariBuff","rapidShot","setRapidShot","within30ft","setWithin30ft","flurryOfStars","setFlurryOfStars","options","calculateAttackRollBonus","babVal","bab","calculateDamageRoll","staticPlusses","everythingElse","string","length","className","map","option","numAttacks","calculateNumberOfAttacks","kiCost","calculateKiCost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b89068c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nfunction App() {\n  const [BAB, setBAB] = useState([11, 6, 1]);\n  const [DEX, setDEX] = useState(8);\n  const [generalBonus, setGeneralBonus] = useState(0);\n  const [kiAttack, setKiAttack] = useState(false);\n  const [fullAttack, setFullAttack] = useState(false);\n  const [haste, setHaste] = useState(false);\n  const [sneakAttack, setSneakAttack] = useState(  false);\n  const [inariBuff, setInariBuff] = useState(false);\n  const [rapidShot, setRapidShot] = useState(false);\n  const [within30ft, setWithin30ft] = useState(false);\n  const [flurryOfStars, setFlurryOfStars] = useState(false);\n  const options = [\n    { label: 'target within 30ft', enabled: within30ft, setEnabled: setWithin30ft },\n    { label: 'Inari Buffing', enabled: inariBuff, setEnabled: setInariBuff },\n    { label: 'Haste', enabled: haste, setEnabled: setHaste },\n    { label: 'Spend Ki', enabled: kiAttack, setEnabled: setKiAttack },\n    { label: 'Full Attack', enabled: fullAttack, setEnabled: setFullAttack },\n    { label: 'Sneak Attack', enabled: sneakAttack, setEnabled: setSneakAttack },\n    { label: 'Rapid Shot (req. Full Attack)', enabled: rapidShot && fullAttack, setEnabled: setRapidShot, disabled: !fullAttack },\n    { label: 'Flurry of Stars (req. Full Attack)', enabled: flurryOfStars && fullAttack, setEnabled: setFlurryOfStars, disabled: !fullAttack },\n  ];\n\n  function calculateAttackRollBonus(babVal = 0) {\n    let bonus = 1; // weapon focus\n    const bab = BAB[babVal]; // unless its not, deal with later\n    bonus += bab;\n    bonus += DEX;\n    if (inariBuff) bonus += 1;\n    if (haste) bonus += 1;\n    if (within30ft) bonus += 1;\n    if (rapidShot) bonus -=2 ;\n    if (flurryOfStars) bonus -= 2;\n    bonus += generalBonus;\n    return bonus;\n  }\n\n  function calculateDamageRoll() {\n    let baseDMG = '11'; // 10 from shuriken, +1 from weapon focus\n    let staticPlusses = 0;\n    let everythingElse = '';\n    if (sneakAttack) everythingElse += '8d6';\n    if (inariBuff) {\n      staticPlusses += 1;\n      everythingElse += `${sneakAttack ? ' + ' : ''} 1d6 elemental`;\n    }\n    if (within30ft) staticPlusses += 1;\n    if (haste) staticPlusses += 1;\n    let string = baseDMG;\n    if (staticPlusses > 0) string += ` + ${staticPlusses}`;\n    if (everythingElse.length > 0) string += ` + ${everythingElse}`;\n    if (generalBonus !== 0) {\n      staticPlusses += generalBonus;\n    }\n    return string;\n  }\n\n  function calculateNumberOfAttacks() {\n    let numAttacks = 1;\n    if (kiAttack) numAttacks += 1;\n    if (haste && fullAttack) numAttacks += 1;\n    if (rapidShot && fullAttack) numAttacks += 1;\n    if (flurryOfStars && fullAttack) numAttacks += 2;\n    return numAttacks;\n  }\n\n  function calculateKiCost() {\n    let kiCost = 0;\n    if (kiAttack) kiCost++;\n    if (flurryOfStars) kiCost++;\n    return kiCost;\n  }\n\n  return (\n    <div className=\"App\">\n      <Heading>Gorb Roller 1.5</Heading>\n      <Configuration \n        BAB={BAB} \n        DEX={DEX} \n        bonus={generalBonus} \n        setBAB={setBAB} \n        setDEX={setDEX} \n        setBonus={setGeneralBonus} \n      />\n      <OptionsContainer>\n        {options.map(option => <Selector {...option} />)}\n      </OptionsContainer>\n      <SummaryBlock>\n        <div>{calculateNumberOfAttacks()} Attacks @</div>\n        <div>\n          <span>Attack Roll:</span>\n          <span>1d20 + {calculateAttackRollBonus()}</span>\n        </div>\n        <div>\n          <span>Damage Roll:</span>\n          <span>{calculateDamageRoll()}</span>\n        </div>\n      </SummaryBlock>\n      {fullAttack && (\n        <>\n          <SummaryBlock>\n            <div>1 Attack @</div>\n            <div>\n              <span>Attack Roll:</span>\n              <span>1d20 + {calculateAttackRollBonus(1)}</span>\n            </div>\n            <div>\n              <span>Damage Roll:</span>\n              <span>{calculateDamageRoll()}</span>\n            </div>\n          </SummaryBlock>\n          <SummaryBlock>\n            <div>1 Attack @</div>\n            <div>\n              <span>Attack Roll:</span>\n              <span>1d20 + {calculateAttackRollBonus(2)}</span>\n            </div>\n            <div>\n              <span>Damage Roll:</span>\n              <span>{calculateDamageRoll()}</span>\n            </div>\n          </SummaryBlock>\n        </>\n      )}\n      <SummaryBlock>\n        <span>Ki Cost: {calculateKiCost()}</span>\n      </SummaryBlock>\n    </div>\n  );\n}\n\nfunction Configuration({ BAB, DEX, bonus, setBAB, setDEX, setBonus }) {\n  const [collapsed, setCollapsed] = useState(false);\n\n  function setPartialBAB(first = BAB[0], second = BAB[1], third = BAB[2]) {\n    setBAB([parseInt(first), parseInt(second), parseInt(third)]);\n  }\n\n  return (\n    <>\n      {/* <button \n        value={collapsed} \n        onClick={() => {setCollapsed(!collapsed)}}\n      >\n        Stats Config\n      </button> */}\n      {!collapsed && (\n        <ConfigurationContainer>\n          <Option>\n            <label>Base Attack Bonus:</label>\n            <NumberInput type=\"number\" value={BAB[0]} onChange={e => setPartialBAB(e.target.value)}/>\n            <span>/</span>\n            <NumberInput type=\"number\" value={BAB[1]} onChange={e => setPartialBAB(BAB[0], e.target.value)}/>\n            <span>/</span>\n            <NumberInput type=\"number\" value={BAB[2]} onChange={e => setPartialBAB(BAB[0], BAB[1], e.target.value)}/>\n          </Option>\n          <Option>\n            <label>Dex Mod:</label>\n            <NumberInput type=\"number\" value={DEX} onChange={e => setDEX(parseInt(e.target.value))}/>\n          </Option>\n          <Option>\n            <label>Bonus/Malus:</label>\n            <NumberInput type=\"number\" value={bonus} onChange={e => setBonus(parseInt(e.target.value))}/>\n          </Option>\n        </ConfigurationContainer>\n      )}\n\n    </>\n  )\n}\n\nfunction Selector({ enabled, label, setEnabled, disabled }) {\n  return (\n    <Option>\n      <input \n        type=\"checkbox\" \n        checked={enabled} \n        onChange={() => {setEnabled(!enabled)}}\n        disabled={disabled}\n      />\n      <label>{label}</label>\n    </Option>\n  );\n}\n\nconst Heading = styled.h3`\n  width: 100%;\n  margin: 0;\n  padding: 15px 0 20px;\n  text-align: center;\n`;\n\nconst OptionsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n`;\n\nconst ConfigurationContainer = styled(OptionsContainer)`\n  border-bottom: 1px solid #afa;\n  padding-bottom: 15px;\n  margin-bottom: 15px;\n`;\n\nconst Option = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 25px;\n  padding: 0 15px;\n`;\n\nconst NumberInput = styled.input`\n  font-size: 14px;\n  padding: 2px 5px;\n  border-radius: 4px;\n  border: 1px solid #afa;\n  background-color: #1e1e1e;\n  color: white;\n  width: 35px;\n  margin-left: 5px;\n  margin-right: 5px;\n`;\n\nconst SummaryBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-top: 1px solid #afa;\n  padding-top: 15px;\n  margin-top: 15px;\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}
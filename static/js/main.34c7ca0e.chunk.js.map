{"version":3,"sources":["App.js","index.js"],"names":["Configuration","BAB","DEX","setBAB","setDEX","useState","collapsed","setPartialBAB","max","min","ConfigurationContainer","Option","NumberInput","type","value","onChange","e","target","Selector","enabled","label","setEnabled","disabled","checked","Heading","styled","h3","OptionsContainer","div","input","SummaryBlock","App","kiAttack","setKiAttack","fullAttack","setFullAttack","haste","setHaste","sneakAttack","setSneakAttack","inariBuff","setInariBuff","rapidShot","setRapidShot","within30ft","setWithin30ft","flurryOfStars","setFlurryOfStars","options","calculateAttackRollBonus","babVal","bonus","calculateDamageRoll","staticPlusses","everythingElse","string","length","className","map","option","numAttacks","calculateNumberOfAttacks","kiCost","calculateKiCost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.34c7ca0e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nfunction App() {\n  const [BAB, setBAB] = useState([8, 3]);\n  const [DEX, setDEX] = useState(8);\n  const [kiAttack, setKiAttack] = useState(false);\n  const [fullAttack, setFullAttack] = useState(false);\n  const [haste, setHaste] = useState(false);\n  const [sneakAttack, setSneakAttack] = useState(false);\n  const [inariBuff, setInariBuff] = useState(false);\n  const [rapidShot, setRapidShot] = useState(false);\n  const [within30ft, setWithin30ft] = useState(false);\n  const [flurryOfStars, setFlurryOfStars] = useState(false);\n  const options = [\n    { label: 'target within 30ft', enabled: within30ft, setEnabled: setWithin30ft },\n    { label: 'Inari Buffing', enabled: inariBuff, setEnabled: setInariBuff },\n    { label: 'Haste', enabled: haste, setEnabled: setHaste },\n    { label: 'Spend Ki', enabled: kiAttack, setEnabled: setKiAttack },\n    { label: 'Full Attack', enabled: fullAttack, setEnabled: setFullAttack },\n    { label: 'Sneak Attack', enabled: sneakAttack, setEnabled: setSneakAttack },\n    { label: 'Rapid Shot (req. Full Attack)', enabled: rapidShot && fullAttack, setEnabled: setRapidShot, disabled: !fullAttack },\n    { label: 'Flurry of Stars (req. Full Attack)', enabled: flurryOfStars && fullAttack, setEnabled: setFlurryOfStars, disabled: !fullAttack },\n  ];\n\n  function calculateAttackRollBonus(babVal = 0) {\n    let bonus = 0;\n    const bab = BAB[babVal]; // unless its not, deal with later\n    bonus += bab;\n    bonus += DEX;\n    if (inariBuff) bonus += 1;\n    if (rapidShot) bonus -=2 ;\n    if (within30ft) bonus += 1;\n    if (flurryOfStars) bonus -= 2;\n    return bonus;\n  }\n\n  function calculateDamageRoll() {\n    let baseDMG = '10';\n    let staticPlusses = 0;\n    let everythingElse = '';\n    if (sneakAttack) everythingElse += '6d6';\n    if (inariBuff) {\n      staticPlusses += 1;\n      everythingElse += `${sneakAttack ? ' + ' : ''} 1d6 elemental`;\n    }\n    if (within30ft) staticPlusses += 1;\n    let string = baseDMG;\n    if (staticPlusses > 0) string += ` + ${staticPlusses}`;\n    if (everythingElse.length > 0) string += ` + ${everythingElse}`;\n    return string;\n  }\n\n  function calculateNumberOfAttacks() {\n    let numAttacks = 1;\n    if (kiAttack) numAttacks += 1;\n    // if (fullAttack) numAttacks += 1;\n    if (haste) numAttacks += 1;\n    if (rapidShot) numAttacks += 1;\n    if (flurryOfStars) numAttacks += 2;\n    return numAttacks;\n  }\n\n  function calculateKiCost() {\n    let kiCost = 0;\n    if (kiAttack) kiCost++;\n    if (flurryOfStars) kiCost++;\n    return kiCost;\n  }\n\n  return (\n    <div className=\"App\">\n      <Heading>Gorb Roller 1.1</Heading>\n      <Configuration BAB={BAB} DEX={DEX} setBAB={setBAB} setDEX={setDEX} />\n      <OptionsContainer>\n        {options.map(option => <Selector {...option} />)}\n      </OptionsContainer>\n      <SummaryBlock>\n        <div>{calculateNumberOfAttacks()} Attacks @</div>\n        <div>\n          <span>Attack Roll:</span>\n          <span>1d20 + {calculateAttackRollBonus()}</span>\n        </div>\n        <div>\n          <span>Damage Roll:</span>\n          <span>{calculateDamageRoll()}</span>\n        </div>\n      </SummaryBlock>\n      {fullAttack && (\n        <SummaryBlock>\n          <div>1 Attack @</div>\n          <div>\n            <span>Attack Roll:</span>\n            <span>1d20 + {calculateAttackRollBonus(1)}</span>\n          </div>\n          <div>\n            <span>Damage Roll:</span>\n            <span>{calculateDamageRoll()}</span>\n          </div>\n        </SummaryBlock>\n      )}\n      <SummaryBlock>\n        <span>Ki Cost: {calculateKiCost()}</span>\n      </SummaryBlock>\n    </div>\n  );\n}\n\nfunction Configuration({ BAB, DEX, setBAB, setDEX }) {\n  const [collapsed, setCollapsed] = useState(false);\n\n  function setPartialBAB(max = BAB[0], min = BAB[1]) {\n    setBAB([max, min]);\n  }\n\n  return (\n    <>\n      {/* <button \n        value={collapsed} \n        onClick={() => {setCollapsed(!collapsed)}}\n      >\n        Stats Config\n      </button> */}\n      {!collapsed && (\n        <ConfigurationContainer>\n          <Option>\n            <label>Base Attack Bonus:</label>\n            <NumberInput type=\"number\" value={BAB[0]} onChange={e => setPartialBAB(e.target.value)}/>\n            <span>/</span>\n            <NumberInput type=\"number\" value={BAB[1]} onChange={e => setPartialBAB(null, e.target.value)}/>\n          </Option>\n          <Option>\n            <label>Dex Mod:</label>\n            <NumberInput type=\"number\" value={DEX} onChange={e => setDEX(e.target.value)}/>\n          </Option>\n        </ConfigurationContainer>\n      )}\n\n    </>\n  )\n}\n\nfunction Selector({ enabled, label, setEnabled, disabled }) {\n  return (\n    <Option>\n      <input \n        type=\"checkbox\" \n        checked={enabled} \n        onChange={() => {setEnabled(!enabled)}}\n        disabled={disabled}\n      />\n      <label>{label}</label>\n    </Option>\n  );\n}\n\nconst Heading = styled.h3`\n  width: 100%;\n  margin: 0;\n  padding: 15px 0 20px;\n  text-align: center;\n`;\n\nconst OptionsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n`;\n\nconst ConfigurationContainer = styled(OptionsContainer)`\n  border-bottom: 1px solid #afa;\n  padding-bottom: 15px;\n  margin-bottom: 15px;\n`;\n\nconst Option = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 25px;\n  padding: 0 15px;\n`;\n\nconst NumberInput = styled.input`\n  font-size: 14px;\n  padding: 2px 5px;\n  border-radius: 4px;\n  border: 1px solid #afa;\n  background-color: #1e1e1e;\n  color: white;\n  width: 25px;\n  margin-left: 5px;\n  margin-right: 5px;\n`;\n\nconst SummaryBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-top: 1px solid #afa;\n  padding-top: 15px;\n  margin-top: 15px;\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}